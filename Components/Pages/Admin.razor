@page "/admin"
@inject gestionReservas.Services.AuthService Auth
@inject gestionReservas.Services.UserService UserService
@inject gestionReservas.Services.ReservaService ReservaService
@using gestionReservas.Models

<div class="container mt-5">
    @if (Auth.EstaAutenticado && Auth.Rol == "Admin")
    {
        <div class="text-center mb-5">
            <h1 class="text-primary mb-2">Panel de Administrador</h1>
            <p class="lead">Bienvenido, @Auth.NombreUsuario</p>
        </div>

        <!-- Tabla de usuarios -->
        <h3 class="mb-3">Usuarios registrados</h3>
        @if (usuarios == null || usuarios.Count == 0)
        {
            <p>No hay usuarios registrados.</p>
        }
        else
        {
            <table class="table table-hover table-bordered shadow-sm">
                <thead class="table-light">
                    <tr>
                        <th>Nombre</th>
                        <th>Documento</th>
                        <th>Rol</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var u in usuarios)
                    {
                        <tr>
                            <td>@u.Nombre</td>
                            <td>@u.Documento</td>
                            <td>@u.Rol</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        <!-- Tabla de reservas -->
        <h3 class="mt-5 mb-3">Reservas registradas</h3>
        @if (reservas == null || reservas.Count == 0)
        {
            <p>No hay reservas registradas.</p>
        }
        else
        {
            <table class="table table-striped table-bordered shadow-sm">
                <thead class="table-light">
                    <tr>
                        <th>Usuario</th>
                        <th>Cancha</th>
                        <th>Fecha</th>
                        <th>Horario</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var r in reservas)
                    {
                        var estadoFinal = r.Estado;

                        // 🔍 Si la reserva era activa pero la fecha ya pasó, se muestra como Finalizada
                        if (r.Estado == "Activa" && r.Fecha < DateTime.Today)
                        {
                            estadoFinal = "Finalizada";
                        }

                        <tr>
                            <td>@r.Usuario.Nombre</td>
                            <td>@r.Cancha.Nombre</td>
                            <td>@r.Fecha.ToString("yyyy-MM-dd")</td>
                            <td>@r.HoraInicio - @r.HoraFin</td>
                            <td>
                                <span class="badge @(estadoFinal == "Activa" ? "bg-success" :
                                                     estadoFinal == "Cancelada" ? "bg-danger" : "bg-secondary")">
                                    @estadoFinal
                                </span>
                            </td>
                            <td>
                                @if (r.Estado == "Activa" && r.Fecha >= DateTime.Today)
                                {
                                    <button class="btn btn-outline-danger btn-sm" @onclick="() => CancelarReserva(r.Id)">
                                        Cancelar
                                    </button>
                                }
                                else
                                {
                                    <span class="text-muted">Sin acciones</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
    else
    {
        <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 60vh;">
            <img src="https://cdn-icons-png.flaticon.com/512/6197/6197190.png"
                 alt="Acceso denegado"
                 width="150"
                 class="mb-4" />
            <h3 class="text-danger text-center">No tienes permiso para acceder a esta vista.</h3>
            <p class="text-muted text-center mb-3">Debes iniciar sesión como <strong>Administrador</strong> para ver esta sección.</p>
            <a class="btn btn-outline-primary" href="/login">Iniciar sesión</a>
        </div>
    }
</div>

@code {
    private List<Usuario> usuarios = new();
    private List<Reserva> reservas = new();

    protected override async Task OnInitializedAsync()
    {
        if (Auth.EstaAutenticado && Auth.Rol == "Admin")
        {
            usuarios = await UserService.ObtenerUsuariosAsync();
            reservas = await ReservaService.ObtenerReservasAsync();
        }
    }

    private async Task CancelarReserva(int reservaId)
    {
        await ReservaService.CancelarReservaAsync(reservaId);
        reservas = await ReservaService.ObtenerReservasAsync();
        StateHasChanged();
    }
}
